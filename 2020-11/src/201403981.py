#Luis Omar Solares Morales - 20140381
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import  mean_squared_error, r2_score

import matplotlib.pyplot as plt
import numpy as np
import random

#Numero de dias
X = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275]

#Fallecidos por dia a nivel nacional de 13/02/2020 al 14/11/2020
Y = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,2,0,0,0,2,1,2,1,0,1,1,0,1,0,3,0,0,1,0,0,1,1,1,1,1,1,2,1,0,0,4,2,2,3,2,4,6,6,6,8,10,8,9,14,8,12,13,12,23,12,14,17,16,29,13,16,23,14,26,21,23,30,25,23,23,32,29,26,36,23,18,30,28,28,34,31,35,45,47,42,31,37,38,40,37,46,62,37,56,49,62,63,46,67,38,41,51,40,54,42,53,31,43,35,42,39,35,37,32,44,30,23,30,46,32,35,33,22,40,18,24,35,31,28,33,26,11,30,25,35,25,28,20,15,12,24,27,28,8,20,19,14,14,16,14,24,13,18,18,13,22,19,10,12,8,16,18,11,13,11,12,19,9,16,8,9,15,11,11,8,8,11,12,13,9,12,14,8,17,8,8,18,11,9,8,10,8,4,6,10,12,11,3,12,8,7,4,10,8,7,11,5,9,6,8,7,4,3,4,11,9,4,5,9,9,4,5,0]
#Y = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,4,4,4,4,4,5,7,7,7,7,9,10,12,13,13,14,15,15,16,16,19,19,19,20,20,20,21,22,23,24,25,26,28,29,29,29,33,35,37,40,42,46,52,58,64,72,82,90,99,113,121,133,146,158,181,193,207,224,240,269,282,298,321,335,361,382,405,435,460,483,506,538,567,593,629,652,670,700,728,756,790,821,856,901,948,990,1021,1058,1096,1136,1173,1219,1281,1318,1374,1423,1485,1548,1594,1661,1699,1740,1791,1831,1885,1927,1980,2011,2054,2089,2131,2170,2205,2242,2274,2318,2348,2371,2401,2447,2479,2514,2547,2569,2609,2627,2651,2686,2717,2745,2778,2804,2815,2845,2870,2905,2930,2958,2978,2993,3005,3029,3056,3084,3092,3112,3131,3145,3159,3175,3189,3213,3226,3244,3262,3275,3297,3316,3326,3338,3346,3362,3380,3391,3404,3415,3427,3446,3455,3471,3479,3488,3503,3514,3525,3533,3541,3552,3564,3577,3586,3598,3612,3620,3637,3645,3653,3671,3682,3691,3699,3709,3717,3721,3727,3737,3749,3760,3763,3775,3783,3790,3794,3804,3812,3819,3830,3835,3844,3850,3858,3865,3869,3872,3876,3887,3896,3900,3905,3914,3923,3927,3932,3932]

X = np.asarray(X)
Y = np.asarray(Y)

X = X[:,np.newaxis]
Y = Y[:,np.newaxis]

plt.scatter(X,Y)

#data preparation

grado = 4

polynomial_features = PolynomialFeatures(degree = grado)

X_TRANF = polynomial_features.fit_transform(X)

#define and train a model

model = LinearRegression()
model.fit(X_TRANF, Y)

#calculate bias and variance

Y_NEW = model.predict(X_TRANF)

rmse = np.sqrt(mean_squared_error(Y,Y_NEW))
r2 = r2_score(Y,Y_NEW)

#Prection

x_new_min = 0.0
x_new_max = 365

X_NEW = np.linspace(x_new_min,x_new_max,365)
X_NEW = X_NEW[:,np.newaxis]

X_NEW_TRANSF = polynomial_features.fit_transform(X_NEW)

Y_NEW = model.predict(X_NEW_TRANSF)

plt.plot(X_NEW,Y_NEW,color='red',linewidth=3)

plt.grid()
plt.xlim(x_new_min,x_new_max)
plt.ylim(0,300)

title = 'Degree = {}; RMSE = {}; R2 = {}'.format(grado,round(rmse,2),round(r2,2))

plt.title("Polynomial Linear Regression using scikit-learn and python3\n"+title,fontsize=10)

plt.xlabel('Number of day')
plt.ylabel('Number of deceased')

plt.savefig("grafica_201403981.png",bbox_inches='tight')
plt.show() 

plt.show()
