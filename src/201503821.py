from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
import numpy as np
import random

# _______________________________________________________________________ 
# Step 1: Entrenar data

#https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv
# 05/03/20 -> dia 0
# 08/11/20 -> dia 248

X = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248]
Y = [0,1,1,5,9,9,13,22,23,26,27,35,41,50,69,89,117,134,158,177,201,231,263,295,314,330,347,375,396,416,435,454,467,483,502,539,558,577,595,612,618,626,642,649,655,660,662,669,681,686,687,693,695,697,705,713,719,725,733,739,742,755,761,765,773,780,792,801,804,815,830,843,853,863,866,882,897,903,911,918,930,951,956,984,1000,1022,1047,1056,1084,1105,1157,1194,1228,1263,1318,1342,1375,1461,1538,1612,1662,1715,1744,1796,1871,1939,2058,2127,2213,2277,2368,2515,2684,2836,2979,3130,3269,3459,3753,4023,4311,4621,4996,5241,5486,5836,6485,6845,7231,7596,8036,8482,8986,9546,9969,10551,11114,11534,11811,12361,13129,13669,14600,15229,15841,16344,16800,17290,17820,18187,18975,19402,19837,20417,21070,22081,22802,23286,23872,24508,25057,26129,26931,27737,28465,29084,29643,30409,31075,32134,33084,33820,34463,35305,36307,37292,38485,39699,39699,41287,42184,43305,44458,45680,46920,46920,48780,49897,51224,52549,53969,55454,55454,57361,58137,59516,60818,62374,63712,63712,65602,66689,68059,69459,70816,72049,72049,73714,74604,75760,76828,77829,79182,79182,81129,82142,83497,84828,86053,87439,87439,89223,90238,91780,93152,94348,95514,95514,97075,97922,99425,100616,101826,103088,103088,104460,105322,106553,107570,108866,109971,109971,111257,112120,113261,114367,115417,116363,116363]

X = np.asarray(X)
Y = np.asarray(Y)

X = X[:,np.newaxis]
Y = Y[:,np.newaxis]

plt.scatter(X,Y)  
#plt.show()

# _________________________________________________________________ 
# Step 2: Predecir data

nb_degree = 4
polynomial_features = PolynomialFeatures(degree = nb_degree) 
#print(X) 
X_TRANSF = polynomial_features.fit_transform(X)  

# _________________________________________________________________  
# Step 3: Definir y entrenar modelo

model = LinearRegression() 
model.fit(X_TRANSF, Y)  

# _________________________________________________________________  
# Step 4: Calcular varianza

Y_NEW = model.predict(X_TRANSF)  
rmse = np.sqrt(mean_squared_error(Y,Y_NEW)) 
r2 = r2_score(Y,Y_NEW)  

print('RMSE: ', rmse) 
print('R2: ', r2)

# _________________________________________________________________  
# Step 5: Prediccion

x_new_min = 0.0 
x_new_max = 300.0

X_NEW = np.linspace(x_new_min, x_new_max, 50) 
X_NEW = X_NEW[:,np.newaxis]  

X_NEW_TRANSF = polynomial_features.fit_transform(X_NEW)  
Y_NEW = model.predict(X_NEW_TRANSF)  

plt.plot(X_NEW, Y_NEW, color='coral', linewidth=3)  

plt.grid()  
plt.xlim(x_new_min,x_new_max)  
plt.ylim(0,170000)  

title = 'Degree = {}; RMSE = {}; R2 = {}'.format(nb_degree, round(rmse,2), round(r2,2))
plt.title('Costa Rica \n ' + title, fontsize=10)
plt.xlabel('Days')  
plt.ylabel('Infecteds')  
plt.show()
